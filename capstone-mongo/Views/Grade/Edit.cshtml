@model capstone_mongo.Models.Grade

@{
    ViewData["Title"] = "Edit Grade";
}

<h4>Edit Grade</h4>
<hr />

@using (Html.BeginForm("Edit", "Grade", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group row">
        <span class="col-sm-2" style="font-weight:bold">
            @Html.DisplayNameFor(model => model.Id)
        </span>
        <span class="col-sm-10">
            @Html.DisplayFor(model => model.Id, new { @class = "form-control" })
        </span>
    </div>
    <div class="form-group row">
        <span class="col-sm-2" style="font-weight:bold">
            @Html.DisplayNameFor(model => model.StudentName)
        </span>
        <span class="col-sm-10">
            @Html.DisplayFor(model => model.StudentName, new { @class = "form-control" })
        </span>
    </div>
    <div class="form-group row">
        <span class="col-sm-2" style="font-weight:bold">
            @Html.DisplayNameFor(model => model.FinalScore)
        </span>
        <span class="col-sm-10">
            @Html.DisplayFor(model => model.FinalScore, new { @class = "form-control" })
        </span>
    </div>
    <br />

    <hr style="margin: 0;color: black;">

    <table class="table">
        <thead>
            <tr>
                <th>Assessments</th>
                <th>Scores</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assessmentScore in Model.AssessmentScores)
            {
                <tr>
                    <td>@assessmentScore.Key</td>
                    <td>
                        @Html.TextBoxFor(m => m.AssessmentScores[assessmentScore.Key], new { @class = "form-control score-input", data_maxscore = assessmentScore.Value })
                        <span class="text-danger score-validation-error" style="display:none;">Score exceeds maximum.</span>
                    </td>
                    @*<td>@Html.TextBoxFor(m => m.AssessmentScores[assessmentScore.Key], new { @class = "form-control" })</td>*@
                </tr>
            }
        </tbody>
    </table>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
}


<div id="loading-overlay">
    <div class="overlay-content" style="text-align: center;">
        <div class="spinner-border" role="status"></div>
        <div class="loading-text">Loading...</div>
    </div>
</div>

@{
    var redirected = TempData["redirected"] as bool? ?? false;
}

@section Scripts {
    <script>function showLoadingOverlay() {
            $("#loading-overlay").show();
        }

        function hideLoadingOverlay() {
            $("#loading-overlay").hide();
        }

        $(document).ready(function () {
            hideLoadingOverlay();

            // Attach the loading overlay to the form submission event
            $("form").on("submit", function () {
                showLoadingOverlay();
            });

            // Check if the page has been redirected successfully
            var redirected = @redirected;

            if (redirected === true) {
                hideLoadingOverlay();
            }
        });

    </script>
}